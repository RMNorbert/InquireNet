version: '3.8'
services:
  postgresql:
    container_name: postgresql
    build:
      context: ./
      dockerfile: Postgres
    networks:
      - inNetwork
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=InquireNet
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgresql", "-U", "postgres"]
      interval: 2s
      timeout: 20s
      retries: 10

  flyway:
    image: flyway/flyway:latest
    container_name: flyway
    depends_on:
      - postgresql
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    networks:
      - inNetwork
    command: ["-url=jdbc:postgresql://postgresql:5432/InquireNet", "-user=postgres", "-password=postgres", "migrate"]

  inquirenet:
    image: rmnorbert/inquirenet
    container_name: inquirenet
    networks:
      - inNetwork
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgresql:
        condition: service_healthy
    links:
      - postgresql
    ports:
      - '8080:8080'
    environment:
      - SECRET_KEY=81936T576E5A7234753777211C25432A462D4A614E645267556B58753873357638792F413F4428472B4B6250655748566D597133743677397B36932645294840
      - DB_URL=jdbc:postgresql://postgresql:5432/InquireNet
    volumes:
      - ./resources/static/dist :/app/src/main/resources/static/dist

networks:
  inNetwork:
    driver: bridge
